#!/bin/sh
# --------------------------------------------------------------------------- #
# install_ww3_v4_svntar: install WAVEWATCH III version 4 from svn tar ball    #
#                                                                             #
# -remarks :                                                                  #
#                                                                             #
#                                                                             #
#                                                      Hendrik L. Tolman      #
#                                                      Jose-Henrique Alves    #
#                                                      October 2012           #
#                                                                             #
#    Copyright 2009-2012 National Weather Service (NWS),                      #
#       National Oceanic and Atmospheric Administration.  All rights          #
#       reserved.  WAVEWATCH III is a trademark of the NWS.                   #
#       No unauthorized use without permission.                               #
#                                                                             #
# --------------------------------------------------------------------------- #
# 1. Preparations                                                             #
# --------------------------------------------------------------------------- #
# 1.a Internal variables

  guide=`\ls wwatch3.*.guide.tar`
  manual=`\ls wwatch3.*.manual.tar`
  model=`\ls wwatch3.*.model.tar`
  regtests=`\ls wwatch3.*.regtests.tar`

  if ! [ $guide ]; then echo " guide file not found, aborting "; exit; fi
  if ! [ $manual ]; then echo " manual file not found, aborting "; exit; fi
  if ! [ $model ]; then echo " model file not found, aborting "; exit; fi
  if ! [ $regtests ]; then echo " regtests file not found, aborting "; exit; fi
    
# 1.b ID header  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  clear
  echo ' '
  echo '                    *******************************'
  echo '                  ***   Installing WAVEWATCH III  ***'
  echo '                    *******************************'
  echo '                                  svntar version 4'
  echo ' '

# 1.c Test present directory - - - - - - - - - - - - - - - - - - - - - - - - -

  main_dir=`pwd`
  cd
  home_dir=`pwd`
  cd $main_dir

  echo ' '
  echo 'Please choose the location of your wwatch3.env (configuration) file'
  echo ' Old setting, use a generic/system-wide wwatch3.env (presumably in $HOME) [G] '
  echo ' Newish setting, create a local wwatch.env at current directory [L] ' 
  echo ' '
  echo ' Type your choice now: '
  read sww3dir

  if [ "${sww3dir}" == "G" ] || [ "${sww3dir}" == "g" ] 
  then

    ww3_env="${home_dir}/.wwatch3.env"   # setup file
 
    if [ -s $ww3_env ]
    then
      set `grep WWATCH3_DIR $ww3_env` ; shift ; main_dir="$*"
      echo "Install directory: " $main_dir
    else
      echo "Generic wwatch3.env file not found at ${home_dir}          "
      echo 'Enter correct location of env file relative to there.' ; echo ' '
      echo ' Alternatively, quit and choose local env file [option L] '
      main_dir=nodir.$$
      until [ -d $main_dir ]
      do
        echo -n "   Directory (relative to $home_dir) : "
        read OK
        if [ -n "$OK" ]
        then
          main_dir="$OK"
        fi
      done
      cd $main_dir
      main_dir=`pwd`
      echo ' '
    fi

  elif [ "${sww3dir}" == "L" ] || [ "${sww3dir}" == "l" ]
  then

    main_dir=`pwd`

    if [ -f ${main_dir}/wwatch3.env ]
    then
      echo ' ';echo ' Local wwatch3.env found, moving ahead.'
      ww3_env="${main_dir}/wwatch3.env"
    else
      echo ' ';echo ' Creating new env file from scratch.'
      ww3_env="${main_dir}/wwatch3.env"
    fi
 fi

  echo ' ';echo "Installing in $main_dir"

  OK="$NULL"
  until [ "$OK" = 'y' ] || [ "$OK" = 'Y' ] || \
        [ "$OK" = 'n' ] || [ "$OK" = 'N' ]
  do
    echo -n "   OK ? [y/n] "
    read OK
  done
  if [ "$OK" = 'n' ] || [ "$OK" = 'N' ]
  then
    echo ' ' ; echo 'Change to correct directory '
    echo ' ' ; echo '   *** INSTALL ABORTED *** ' ; echo ' ' ; exit
  fi

  cd $main_dir

# 1.d Set up environment - - - - - - - - - - - - - - - - - - - - - - - - - - -

  echo ' '
  echo 'Setting up environment variables.'

  if [ -s ${ww3_env} ]
  then
    echo "   Setup file $ww3_env found"

    set `grep WWATCH3_LPR $ww3_env` ; shift
    prnt="$*"

    set `grep WWATCH3_F77 $ww3_env` ; shift
    fort="$*"

    set `grep WWATCH3_CC  $ww3_env` ; shift
    cc="$*"

    set `grep WWATCH3_TMP $ww3_env` ; shift
    temp_dir="$*"

    set `grep WWATCH3_SOURCE $ww3_env` ; shift
    s_source="$*"

    set `grep WWATCH3_LIST $ww3_env` ; shift
    s_list="$*"

    newfile='no'

  else
    echo ' ';echo '   No setup file found. Variables being set to defaults: '
    prnt=printer
    fort=f77
    cc=cc
    temp_dir=${main_dir}/tmp
    s_source=yes
    s_list=yes
    do_set='n'

    echo ' ';echo 'Creating local wwatch3.env for use in regression testing'
    ww3_env=${main_dir}/wwatch3.env 
    newfile='yes'  
  fi
    
    echo "      Printer (listings)       : $prnt"
    echo "      FORTRAN comp. (aux only) : $fort"
    echo "      C Compiler (aux only)    : $cc"
    echo "      Scratch directory        : $temp_dir"
    echo "      Save source code         : $s_source"
    echo "      Save listings            : $s_list"

    OK="$NULL"
    until [ "$OK" = 'y' ] || [ "$OK" = 'Y' ] || \
          [ "$OK" = 'n' ] || [ "$OK" = 'N' ]
    do
      echo -n "   Update settings ? [y/n] "
      read OK
      case $OK in
       'y'|'Y') do_set='y' ;;
       'n'|'N') do_set='n' ;;
      esac
    done

  if [ "$do_set" = 'y' ]
  then
    echo ' '
    echo "Modifying set-up :"
    newfile='yes'
    OK="$NULL"
    until [ "$OK" = 'y' ] || [ "$OK" = 'Y' ]
    do
      echo ' '

      echo -n "      Printer for listings [$prnt] : "
      instr="$NULL" ; read instr
      if [ -n "$instr" ]
      then
        prnt="$instr"
      fi

      echo -n "      Compiler for aux. [$fort] : "
      instr="$NULL" ; read instr
      if [ -n "$instr" ]
      then
        fort="$instr"
      fi

      echo -n "      Compiler for aux. [$cc] : "
      instr="$NULL" ; read instr
      if [ -n "$instr" ]
      then
        cc="$instr"
      fi

      OK="$NULL"
      until [ "$OK" = 'y' ]
      do
        echo -n "      Scratch space [$temp_dir] : "
        instr="$NULL" ; read instr
        if [ -n "$instr" ]
        then
          temp_dir="$instr"
        fi
        if [ -n "$temp_dir" ]
        then
          if [ -d $temp_dir ]
          then
            OK='y'
          else
            if `mkdir $temp_dir` 2> /dev/null
            then
              OK='y'
            fi
            rmdir $temp_dir
          fi
        fi
      done

      echo -n "      Save source code files (*.f)  [$s_source] : "
      instr="$NULL" ; read instr
      if [ -n "$instr" ]
      then
        if [ "$instr" = 'yes' ] || [ "$instr" = 'YES' ]
        then
          s_source='yes'
        else
          s_source='no'
        fi
      fi

      echo -n "      Save listing files  [$s_list] : "
      instr="$NULL" ; read instr
      if [ -n "$instr" ]
      then
        if [ "$instr" = 'yes' ] || [ "$instr" = 'YES' ]
        then
          s_list='yes'
        else
          s_list='no'
        fi
      fi

      echo ' '
      echo "   Modified set up :"
      echo "      Printer (listings)       : $prnt"
      echo "      FORTRAN comp. (aux only) : $fort"
      echo "      C Compiler (aux only)    : $cc"
      echo "      Scratch directory        : $temp_dir"
      echo "      Save sources             : $s_source"
      echo "      Save listings            : $s_list"
      echo -n "   New settings OK ? [y/n] "
      read OK
      ww3_env=${main_dir}/wwatch3.env 
    done
  fi
  echo ' '

# 1.e Save environment in file - - - - - - - - - - - - - - - - - - - - - - - -

 if [ "${newfile}" == "yes" ]
 then

#  cd $home_dir
  rm -f $ww3_env

  echo '#'                                                    > $ww3_env
  echo '# Environment variables for wavewatch III'           >> $ww3_env
  echo '# ---------------------------------------'           >> $ww3_env
  echo '#'                                                   >> $ww3_env
  echo ' '                                                   >> $ww3_env
  echo "WWATCH3_LPR      $prnt"                              >> $ww3_env
  echo "WWATCH3_F77      $fort"                              >> $ww3_env
  echo "WWATCH3_CC       $cc"                                >> $ww3_env
  echo "WWATCH3_DIR      $main_dir"                          >> $ww3_env
  echo "WWATCH3_TMP      $temp_dir"                          >> $ww3_env
  echo "WWATCH3_SOURCE   $s_source"                          >> $ww3_env
  echo "WWATCH3_LIST     $s_list"                            >> $ww3_env
  echo ' '                                                   >> $ww3_env

 fi

  if [ ! -d $temp_dir ]
  then
    mkdir $temp_dir
  fi
  cd $temp_dir
  rm -f * 2> /dev/null
  cd $main_dir

  OK="$NULL"
  until [ "$OK" = 'y' ] || [ "$OK" = 'Y' ] || \
        [ "$OK" = 'n' ] || [ "$OK" = 'N' ]
  do
    echo -n 'Continue with actual implementation ? [y/n] '
    read OK
  done

  if [ "$OK" = 'n' ] || [ "$OK" = 'N' ]
  then
    echo ' '
    echo '                    *******************************'
    echo '                  ***       End of program        ***'
    echo '                    *******************************'
    echo ' '
    exit
  else
    echo ' '
    echo 'Starting actual implementation ...'
    echo '   Use Ctrl-C to terminate program ...'
    echo ' '
  fi

# Unpack tar files

  mkdir -p ${main_dir}/arc_tmp

  cd ${main_dir}/arc_tmp

  echo "Unpacking $guide"
  tar xf ../$guide
  echo "Unpacking $manual"
  tar xf ../$manual
  echo "Unpacking $model"
  tar xf ../$model
  echo "Unpacking $regtests"
  tar xf ../$regtests

  cd ${main_dir}

# Make the model directories (at same level as manual and guide)
  for dir in aux bin ftn obj mod exe inp oldtests work regtests manual guide
  do
    if [ ! -d $dir ]
    then
      echo "   making directory $dir"
      mkdir $dir
    fi
  done

# 2.e Set file permissions - - - - - - - - - - - - - - - - - - - - - - - - - -

  cd $main_dir/arc_tmp/model/aux
  chmod 644 *.gs
  chmod 644 spec_ids*
  chmod 644 *.f

  cd $main_dir/arc_tmp/model/bin
  chmod 744 *
  chmod 644 install_wwatch3 switch*

  cd $main_dir/arc_tmp/model/ftn
  chmod 644 *.ftn
  chmod 644 *.f90

  cd $main_dir/arc_tmp/model/inp
  chmod 644 *.inp track_i.ww3

  cd $main_dir/arc_tmp/model/oldtests
  chmod 744 ww3_t* mww3_test_*
  chmod 755 mww3_data_*

# Include regtests in the loop
  cd $main_dir/arc_tmp/regtests/bin
  chmod 744 *
#  chmod 755 mww3_data_*

#Old test loop
  for dir in 00 01 02 03
  do
    cd $main_dir/arc_tmp/model/oldtests/mww3_data_$dir
    if [ "$dir" = '00' ]
    then
      chmod 644 gfs*
      chmod 644 ice*
    else
      chmod 644 *.bot
      chmod 644 *.obs*
      chmod 644 *.mask
      chmod 644 *.gs
    fi
    chmod 644 ww3_*

  done

# New regtests loop (for when mww3_case_?? are included)
#    for dir in 00 01 02 03
#  do
#    cd $main_dir/arc_tmp/regtests/mww3_data_$dir
#    if [ "$dir" = '00' ]
#    then
#      chmod 644 gfs*
#      chmod 644 ice*
#    else
#      chmod 644 *.bot
#      chmod 644 *.obs*
#      chmod 644 *.mask
#      chmod 644 *.gs
#    fi
#    chmod 644 ww3_*
#
#  done


# --------------------------------------------------------------------------- #
# 3. Set-up / update aux directory                                            #
# --------------------------------------------------------------------------- #

  cd $main_dir/aux
  all_files=`ls ../arc_tmp/model/aux`

  echo ' ' ; echo ' '
  echo ' ********************************'
  echo '*** Set up / update directories ***'
  echo ' *****************************************************************'
  echo "    Directory `pwd`"

# 3.a FORTRAN executables  - - - - - - - - - - - - - - - - - - - - - - - - - -

  echo ' '
  echo 'FORTRAN executables :'
  echo '---------------------'

  for code in w3adc w3prnt w3list w3split
  do

    echo "   Program $code ..."
    if [ -f "$main_dir/arc_tmp/model/aux/$code.f" ]
    then
      cp -f  ../arc_tmp/model/aux/$code.f .
      echo "      Previous $code.f found in $main_dir/aux"
    else
      echo "      *** code not found ; abort *** " ; echo ' ' ; exit 30
    fi

    echo "      Updating $code in $main_dir/bin"
    echo "         Compiling ..."
    if `$fort $code.f > fort.out 2> fort.err`
    then
      rm -f $main_dir/bin/$code
      if [ -f a.out ]
      then
        echo "         Storing ..."
        mv a.out $main_dir/bin/$code
      else
        echo ' ' ; echo "      *** FILE a.out NOT FOUND *** "
        echo ' ' ; cat fort.out ; echo ' ' ; cat fort.err ; echo ' '
       fi
    else
      echo ' ' ; echo "      *** ERROR IN COMPILING $code.f *** "
      echo ' ' ; cat fort.out ; echo ' ' ; cat fort.err ; echo ' '
    fi
    rm -f fort.*
    tmp_files=$all_files
    all_files=`echo $tmp_files | sed -e "s/$code.f//g"`

  done

# 3.b GrADS aux scripts  - - - - - - - - - - - - - - - - - - - - - - - - - - -

  for list in 1 2
  do
  echo ' '

    case $list in 
     1) echo 'GrADS aux scripts'
        echo '-----------------'
        cd $main_dir/arc_tmp/model/aux
        files='map2_1.gs map2_2.gs map2_3.gs map_s3.gs spec.gs 1source.gs'
        files="$files source.gs colorset.gs cbarn.gs spec_ids.gen"
        files="$files profile.gs" ;;
     2) echo 'Other :'
        echo '-------' 
        files=$all_files  ;;
    esac

    cd $main_dir/aux

    if [ -z "$files" ]
    then
      echo '   No files found'
    else
      for file in $files
      do
        echo "   (re)copying $file ..."
        cp -f  ../arc_tmp/model/aux/$file .
        tmp_files=$all_files
        all_files=`echo $tmp_files | sed -e "s/$file//"`
      done
    fi

  done

# 3.c spec_ids file  - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  echo ' '
  echo 'spec_ids file :'
  echo '---------------'

  cd $main_dir/aux

  for file in spec_ids
  do
    if [ -f $file ]
    then
      echo "   File $file exists (will not be modified)."
    else
      echo "   File $file does not exists."
      echo "      Copied from $file.gen (may be modified by user)"
      cp $file.gen $file
    fi
  done

# --------------------------------------------------------------------------- #
# 4. Set-up / update bin directory                                            #
# --------------------------------------------------------------------------- #

  cd $main_dir/bin
  all_files=`ls $main_dir/arc_tmp/model/bin`
  echo ' '

  echo ' ' ; echo ' '
  echo ' ********************************'
  echo '*** Set up / update directories ***'
  echo ' *****************************************************************'
  echo "    Directory `pwd`"

# 4.a basic aux scripts  - - - - - - - - - - - - - - - - - - - - - - - - - - -

  for list in 1 2
  do
    echo ' '
    case $list in 
      1) echo 'Scripts for compiling and linking :'
         echo '-----------------------------------'
         files='ad3_test ad3 w3_make w3_new make_makefile.sh'
         cd $main_dir/arc_tmp/model/bin
         files="$files switch.gen `ls comp.*` `ls link.*`"
         cd $main_dir/bin ;;
      2) echo 'Other :'
         echo '-------' 
         files=$all_files  ;;
    esac

    cd $main_dir/bin

    if [ -z "$files" ]
    then
      echo '   No files found'
    else
      for file in $files
      do
        echo "   (re)copying $file ..."
        cp -f  ../arc_tmp/model/bin/$file .
        tmp_files=$all_files
        all_files=`echo $tmp_files | sed -e "s/$file//"`
      done
    fi

  done

# 4.b comp and link shell scripts  - - - - - - - - - - - - - - - - - - - - - -

    echo ' '
    echo 'Compile and link shell scripts :'
    echo '--------------------------------'

    for file in switch comp link
    do
      if [ -f $file ]
      then
        echo "   File $file exists (will not be modified)."
      else
        echo "   File $file does not exists."
        echo "      Copied from $file.gen (has to be modified by user)"
        cp $file.gen $file
      fi
    done

    chmod 700 comp link
    chmod 600 switch

# --------------------------------------------------------------------------- #
# 5. Set-up / update ftn directory                                            #
# --------------------------------------------------------------------------- #

  cd $main_dir/arc_tmp/model/ftn
  all_files=`ls`
  ftn_files=`ls *.ftn`
  cd $main_dir/ftn
  echo ' '

  echo ' ' ; echo ' '
  echo ' ********************************'
  echo '*** Set up / update directories ***'
  echo ' *****************************************************************'
  echo "    Directory `pwd`"

  nr_new=0

  for list in 1 2 3 4
  do
    echo ' '
    cd $main_dir/arc_tmp/model/ftn
    case $list in 
      1) echo 'Main programs :'
         echo '--------------' ; files=`ls ww3_*.ftn gx_*.ftn` ;;
      2) echo 'Subroutines (.ftn) :'
         echo '--------------------' ; files=$ftn_files  ;;
      3) echo 'Subroutines (.f90) :'
         echo '--------------------' ; files=`ls *.f90`  ;;
      4) echo 'Other :'
         echo '-------' ; files=`echo $all_files | sed -e "s/SCRIP//g"` ;;
    esac
    cd $main_dir/ftn

    nr_old=0

    if [ -z "$files" ]
    then
      echo '   No files found'
    else
      for file in $files
      do
        if [ -f $file ]
        then
          nr_old=`expr $nr_old + 1`
        else
          nr_new=`expr $nr_new + 1`
          echo "   New copy $file ..."
        fi
        cp -f  ../arc_tmp/model/ftn/$file .
        tmp_files=$all_files
        all_files=`echo $tmp_files | sed -e "s/$file//"`
        tmp_files=$ftn_files
        ftn_files=`echo $tmp_files | sed -e "s/$file//"`
      done
      if [ "$nr_old" != '0' ]
      then
        echo "   $nr_old existing copies found."
      fi
    fi

  done

# Update subdirectory SCRIP
  cd $main_dir/arc_tmp/model/ftn/SCRIP
  files=`ls`
  if [ ! -d $main_dir/ftn/SCRIP ]
  then
    mkdir -p $main_dir/ftn/SCRIP
  fi
  cd $main_dir/ftn/SCRIP
 
  for file in $files
  do
    if [ -f $file ]
    then
      nr_old=`expr $nr_old + 1`
    else
      nr_new=`expr $nr_new + 1`
      echo "   New copy $file ..."
    fi
    cp -f  ../../arc_tmp/model/ftn/SCRIP/$file .
  done

  echo ' '
  echo "Number of new copies set up : $nr_new"

# --------------------------------------------------------------------------- #
# 6. Set-up / update inp directory                                            #
# --------------------------------------------------------------------------- #

  cd $main_dir/arc_tmp/model/inp
  files=`ls ww3_*.inp track_i.ww3`
  files="$files `ls gx_*.inp`"
  cd $main_dir/inp
  echo ' '

  echo ' ' ; echo ' '
  echo ' ********************************'
  echo '*** Set up / update directories ***'
  echo ' *****************************************************************'
  echo "    Directory `pwd`"
  echo ' '

  nr_old=0
  nr_new=0

  for file in $files
  do
    if [ -f $file ]
    then
      nr_old=`expr $nr_old + 1`
    else
      nr_new=`expr $nr_new + 1`
      echo "   New copy $file ..."
    fi
    cp -f  ../arc_tmp/model/inp/$file .
  done
  if [ "$nr_old" != '0' ]
  then
    echo "   $nr_old existing copies found."
  fi
  if [ "$nr_new" != '0' ]
  then
    echo "   $nr_new copies made."
  fi

# --------------------------------------------------------------------------- #
# 7. Set-up / update test directory                                           #
# --------------------------------------------------------------------------- #

  cd $main_dir/arc_tmp/model/oldtests
  tmp_files=`ls`
  all_files=
  all_dirs=
  for file in $tmp_files
  do
    if [ -d $file ]
    then
      all_dirs="$all_dirs $file"
    else
      all_files="$all_files $file"
    fi
  done
  cd $main_dir/oldtests
  echo ' '

  echo ' ' ; echo ' '
  echo ' ********************************'
  echo '*** Set up / update directories ***'
  echo ' *****************************************************************'
  echo "    Directory `pwd`"

# 7.a Sets of test cases

  for list in 1 2 3 4
  do
    echo ' '
    cd ../arc_tmp/model/oldtests
    case $list in 
      1) echo 'Propagation tests :' ; \
         echo '-------------------' ; files=`ls ww3_tp*` ;;
      2) echo 'Source term tests :' ; \
         echo '-------------------' ; files=`ls ww3_ts*` ;;
      3) echo 'Multi-scale tests :' ; \
         echo '-------------------' ; \
               files=`ls mww3_test_* mww3_case_*` ;;
      4) echo 'Other tests :' ; \
         echo '-------------' ; files=$all_files ;;
    esac
    cd $main_dir/oldtests
   
    nr_old=0

    if [ -z "$files" ]
    then 
      echo '   No files found'
    else
      for file in $files
      do
        if [ -f $file ]
        then
          nr_old=`expr $nr_old + 1`
        else
          nr_new=`expr $nr_new + 1`
          echo "   New copy $file ..."
        fi
        cp -f  ../arc_tmp/model/oldtests/$file .
        tmp_files=$all_files
        all_files=`echo $tmp_files | sed -e "s/$file//"`
      done
      if [ "$nr_old" != '0' ]
      then
        echo "   $nr_old existing copies found."
      fi
    fi
  done

# 7.b Directories

  echo ' '
  echo 'Data directories :'
  echo '------------------'

  for dir in $all_dirs
  do
    if [ ! -d $main_dir/oldtests/$dir ]
    then
      mkdir $main_dir/oldtests/$dir
      echo "   Making directory $dir ..."
    else
      echo "   Checking directory $dir ..."
    fi

    cd $main_dir/arc_tmp/model/oldtests/$dir
    files=`ls`
    cd $main_dir/oldtests/$dir
    nr_old=0

    if [ -z "$files" ]
    then 
      echo '      No files found'
    else
      for file in $files
      do
        if [ -f $file ]
        then
          nr_old=`expr $nr_old + 1`
        else
          nr_new=`expr $nr_new + 1`
          echo "      New copy $file ..."
        fi
        cp -f  ../../arc_tmp/model/oldtests/$dir/$file .
        tmp_files=$all_files
        all_files=`echo $tmp_files | sed -e "s/$file//"`
      done
      if [ "$nr_old" != '0' ]
      then
        echo "      $nr_old existing copies found."
      fi
    fi

  done

  cd $main_dir/oldtests
  cp -f  ../bin/switch .

# --------------------------------------------------------------------------- #
# 7.1 Set-up / update regtests directory                                           #
# --------------------------------------------------------------------------- #

  cd $main_dir/arc_tmp/regtests
  tmp_dirs=`ls`

  for dir in $tmp_dirs
  do
    if [ ! -d $main_dir/regtests/$dir ]
    then
      mkdir $main_dir/regtests/$dir
      echo "   Making directory $dir ..."
    else
      echo "   Checking directory $dir ..."
    fi

    cd $main_dir/arc_tmp/regtests/$dir
    files=`ls -F | grep -v \/`
    ndirs=`ls -F | grep \/`
    cd $main_dir/regtests/$dir
    nr_old=0

    if [ -z "$files" ]
    then
      echo '      No files found'
    else
      for file in $files
      do
        if [ -f $file ]
        then
          nr_old=`expr $nr_old + 1`
        else
          nr_new=`expr $nr_new + 1`
          echo "      New copy $file ..."
        fi
        cp -f  ../../arc_tmp/regtests/$dir/$file .
        tmp_files=$all_files
        all_files=`echo $tmp_files | sed -e "s/$file//"`
      done
      if [ "$nr_old" != '0' ]
      then
        echo "      $nr_old existing copies found."
      fi
    fi

    for ndir in $ndirs
    do
      if [ ! -d $main_dir/regtests/$dir/$ndir ]
      then
        mkdir $main_dir/regtests/$dir/$ndir
        echo "   Making directory $dir/$ndir ..."
      else
        echo "   Checking directory $dir/$ndir ..."
      fi

      cd $main_dir/arc_tmp/regtests/$dir/$ndir
      files=`ls -F | grep -v \/`
      cd $main_dir/regtests/$dir/$ndir
      nr_old=0

      if [ -z "$files" ]
      then
        echo '      No files found'
      else
        for file in $files
        do
          if [ -f $file ]
          then
            nr_old=`expr $nr_old + 1`
          else
            nr_new=`expr $nr_new + 1`
            echo "      New copy $file ..."
          fi
          cp -f  ../../../arc_tmp/regtests/$dir/$ndir/$file .
          tmp_files=$all_files
          all_files=`echo $tmp_files | sed -e "s/$file//"`
        done
        if [ "$nr_old" != '0' ]
        then
          echo "      $nr_old existing copies found."
        fi
      fi

    done

  done

  cd $main_dir/regtests

  chmod 744 bin/*

# --------------------------------------------------------------------------- #
# 8. Set-up / update work directory                                           #
# --------------------------------------------------------------------------- #

  cd $main_dir/work
  echo ' '

  echo ' ' ; echo ' '
  echo ' ********************************'
  echo '*** Set up / update directories ***'
  echo ' *****************************************************************'
  echo "    Directory `pwd`"

# 8.a comp link and switch

  echo ' '
  echo 'Set up links to comp link and switch ...'
  ln -sf ../bin/switch
  ln -sf ../bin/comp
  ln -sf ../bin/link

# 8.b selected GrADS scripts

  echo 'Set up links to selected GrADS scripts ...'
  for file in cbarn.gs colorset.gs spec.gs source.gs 1source.gs spec_ids
  do
    if [ ! -f $file ]
    then
      ln -sf ../aux/$file .
    fi
  done

# 8.c input files

  echo 'Set up links to input files ...'
  cd $main_dir/inp
  files=`ls`
  cd $main_dir/work

  for file in $files
  do
    if [ ! -f $file ]
    then
      ln -sf ../inp/$file .
    fi
  done

# --------------------------------------------------------------------------- #
# 6. Set-up / update inp directory                                            #
# --------------------------------------------------------------------------- #

  for newdir in manual guide
  do
    cd $main_dir/arc_tmp/${newdir}
    files=`ls *`
    cd $main_dir/${newdir}
    echo ' '

    echo ' ' ; echo ' '
    echo ' ********************************'
    echo '*** Set up / update directories ***'
    echo ' *****************************************************************'
    echo "    Directory `pwd`"
    echo ' '

    nr_old=0
    nr_new=0

    for file in $files
    do
      if [ -f $file ]
      then
        nr_old=`expr $nr_old + 1`
      else
        nr_new=`expr $nr_new + 1`
        echo "   New copy $file ..."
      fi
      ln -sf ../arc_tmp/${newdir}/$file
    done
    if [ "$nr_old" != '0' ]
    then
      echo "   $nr_old existing copies found."
    fi
    if [ "$nr_new" != '0' ]
    then
      echo "   $nr_new copies made."
    fi
  done

# Cleanup arc
  rm -rf ${main_dir}/arc_tmp

# --------------------------------------------------------------------------- #
# 9. The end                                                                  #
# --------------------------------------------------------------------------- #

  echo ' ' ; echo ' '
  echo ' *******************'
  echo '*** Final remarks ***'
  echo ' *****************************************************************'
  echo ' '
  echo 'To run the WAVEWATCH III executables and the scripts to generate '
  echo 'and update these executables from arbitrary directories, add the'
  echo 'following directories to the path of your interactive shell :'
  echo ' '
  echo "      $main_dir/bin"
  echo "      $main_dir/exe"
  echo ' '
  echo "Note that 'comp' and 'link' and 'switch' are user supplied ...."
  echo ' '

  echo ' ' ; echo ' '
  echo '                    *******************************'
  echo '                  ***       End of program        ***'
  echo '                    *******************************'
  echo ' '

# end of script ------------------------------------------------------------- #
