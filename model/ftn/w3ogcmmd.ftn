#include "w3macros.h"
!/ ------------------------------------------------------------------- /
MODULE w3ogcmmd

   !===========================================================================
   !                   ***  MODULE  w3ogcmmd  ***
   !
   ! Module used for coupling applications between OCEAN model and WW3 with OASIS3-MCT 
   !
   !===========================================================================

   IMPLICIT NONE

   INCLUDE "mpif.h"

   PRIVATE

  !! * Accessibility
  PUBLIC snd_fields_to_ocean
  PUBLIC rcv_fields_from_ocean

  CONTAINS


   !======================================================================

  
  SUBROUTINE snd_fields_to_ocean(id_oasis_time)

   !&E---------------------------------------------------------------------
   !&E                 *** ROUTINE snd_fields_to_ocean  ***
   !&E
   !&E ** Purpose : Send coupling fields to ocean model 
   !&E
   !&E ** Description : 
   !&E
   !&E ** Called by : 
   !&E
   !&E ** External calls :
   !&E
   !&E ** Used ij-arrays :
   !&E
   !&E ** Modified variables : 
   !&E
   !&E ** Reference :
   !&E
   !&E ** History :
   !&E        2013-10 : A. THEVENIN (CERFACS) : Creation 
   !&E
   !&E---------------------------------------------------------------------

   USE W3OACPMD,  ONLY: il_nb_snd, snd_fld, cpl_oasis_snd
   USE W3GDATMD,  ONLY: NSEAL, MAPSTA, MAPSF
   USE W3ADATMD,  ONLY: HS, T0M1, THM, BHD, TAUOX, TAUOY, PHIOC, UBA, UBD, &
                        TAUWIX, TAUWIY, WLM
   USE W3ODATMD,  ONLY: NAPROC, IAPROC, UNDEF
   USE CONSTANTS, ONLY: PI, DERA

   !! * Argument
   INTEGER, INTENT(IN) :: id_oasis_time

   !! * Local declaration
   INTEGER                        :: I, ISEA, IX, IY
   INTEGER, DIMENSION(NSEAL)      :: MASK
   REAL(kind=8), DIMENSION(NSEAL,1) :: rla_oasis_snd
   INTEGER                        :: ib_do
   LOGICAL                        :: ll_action   
   REAL(kind=8), DIMENSION(NSEAL) :: TMP

   !!----------------------------------------------------------------------
   !! * Executable part

   DO I = 1, NSEAL
     ISEA = IAPROC + (I-1)*NAPROC
     IX = MAPSF(ISEA,1)
     IY = MAPSF(ISEA,2)
     ! Get the mask : 1 - sea 0 - open boundary cells dried cells
     MASK(I) = MOD(MAPSTA(IY,IX),2)
   END DO

   DO ib_do = 1, il_nb_snd

      ! Mask - wet-drying
      IF (snd_fld(ib_do)%cl_field_name == 'WW3__DRY') THEN
         rla_oasis_snd(:,1) = DBLE(MASK(1:NSEAL)) 
      ENDIF

      ! Mean wave period (tmn in s) (m0,-1)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3_T0M1') THEN
         TMP(1:NSEAL) = 0.0
         WHERE(T0M1 /= UNDEF) TMP=T0M1
         rla_oasis_snd(:,1) = DBLE(TMP(1:NSEAL))
      ENDIF

      ! Wave height (hs in m)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3___HS') THEN
         rla_oasis_snd(:,1) = DBLE(HS(1:NSEAL))
      ENDIF

      ! Cosinus of Mean wave direction (cos(dir) in n/a)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3_CDIR') THEN
         TMP(1:NSEAL) = 0.0
         WHERE(THM /= UNDEF) TMP(:)=cos(THM(:)*DERA)
         rla_oasis_snd(:,1) = TMP(1:NSEAL)
      ENDIF

      ! Sinus of Mean wave direction (sin(dir) in n/a)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3_SDIR') THEN
         TMP(1:NSEAL) = 0.0
         WHERE(THM /= UNDEF) TMP(:)=sin(THM(:)*DERA)
         rla_oasis_snd(:,1) = TMP(1:NSEAL)
      ENDIF

      ! Wave-induced Bernoulli head pressure (bhd in N.m-1) (J term, Smith JPO 2006)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3__BHD') THEN
         rla_oasis_snd(:,1) = DBLE(BHD(1:NSEAL))
      ENDIF

      ! Wave-ocean momentum flux (tauox in m2.s-2)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3_TWOX') THEN
         TMP(1:NSEAL) = 0.0
         WHERE(TAUOX /= UNDEF) TMP(:)=TAUOX(:)
         rla_oasis_snd(:,1) = DBLE(TMP(1:NSEAL))
      ENDIF

      ! Wave-ocean momentum flux (tauoy in m2.s-2)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3_TWOY') THEN
         TMP(1:NSEAL) = 0.0
         WHERE(TAUOY /= UNDEF) TMP(:)=TAUOY (:)
         rla_oasis_snd(:,1) = DBLE(TMP(1:NSEAL))
      ENDIF

      ! rms amplitude of orbital velocity of the waves (ubr in m.s-1)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3__UBR') THEN
         rla_oasis_snd(:,1) = DBLE(UBA(1:NSEAL))
      ENDIF

      ! Wave-to-ocean TKE flux (phioc in W.m-2)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3__FOC') THEN
         TMP(1:NSEAL) = 0.0
         WHERE(PHIOC /= UNDEF) TMP(:)=PHIOC(:)
         rla_oasis_snd(:,1) = DBLE(TMP(1:NSEAL))
      ENDIF

      ! Net wave-supported stress, u component (tauwix in m2.s-2)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3_TAWX') THEN
         TMP(1:NSEAL) = 0.0
         WHERE(TAUWIX /= UNDEF) TMP(:)=TAUWIX(:)
         rla_oasis_snd(:,1) = DBLE(TMP(1:NSEAL))
      ENDIF

      ! Net wave-supported stress, v component (tauwix in m2.s-2)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3_TAWY') THEN
         TMP(1:NSEAL) = 0.0
         WHERE(TAUWIY /= UNDEF) TMP(:)=TAUWIY(:)
         rla_oasis_snd(:,1) = DBLE(TMP(1:NSEAL))
      ENDIF

      ! Mean wave length (wlm in m)
      IF (snd_fld(ib_do)%cl_field_name == 'WW3___LM') THEN
         TMP(1:NSEAL) = 0.0
         WHERE(WLM /= UNDEF) TMP(:)=WLM(:)
         rla_oasis_snd(:,1) = DBLE(TMP(1:NSEAL))
      ENDIF


      ! According to the present implementation, fields are sent at each coupling time step to OASIS
      ! Consequently, OASIS cannot estimate any time average
      ! For such an application, one must estimate the fields at each time step
      ! (or a time step smaller than the coupling time step).
      ! In such conditions, OASIS get the information every time step
      ! but only send the information to the other code when the time matches the coupling time.
      CALL cpl_oasis_snd(ib_do, id_oasis_time, rla_oasis_snd, ll_action)

   ENDDO

  END SUBROUTINE snd_fields_to_ocean


   !======================================================================

  
  SUBROUTINE rcv_fields_from_ocean(id_oasis_time, id_lcomm, FXN, FYN, FAN)

   !&E---------------------------------------------------------------------
   !&E                 *** ROUTINE rcv_fields_from_ocean  ***
   !&E
   !&E ** Purpose : Receive coupling fields from ocean model
   !&E
   !&E ** Description : 
   !&E
   !&E ** Called by : 
   !&E
   !&E ** External calls :
   !&E
   !&E ** Used ij-arrays :
   !&E
   !&E ** Modified variables : 
   !&E
   !&E ** Reference :
   !&E
   !&E ** History :
   !&E        2013-10 : A. THEVENIN (CERFACS) : Creation 
   !&E        2015-04 : M. ACCENSI (IFREMER)  : Modification for ww3 coupling
   !&E
   !&E---------------------------------------------------------------------

   USE W3OACPMD, ONLY: il_nb_rcv, rcv_fld, cpl_oasis_rcv
   USE W3GDATMD, ONLY: NX, NY, NSEAL, NSEA, MAPSF
   USE W3ODATMD, ONLY: NAPROC, IAPROC
   USE W3SERVMD, ONLY: W3S2XY

   !! * Argument
   INTEGER, INTENT(IN)              :: id_oasis_time, id_lcomm
   REAL, INTENT(INOUT)              :: FXN(:,:), FYN(:,:), FAN(:,:)
   
   !! * Local declaration
   LOGICAL                          :: ll_action   
   INTEGER                          :: ib_do, ib_i, ib_j, il_err
   REAL(kind=8), DIMENSION(NSEAL,1) :: rla_oasis_rcv
   REAL(kind=8), DIMENSION(NSEAL)   :: TMP, MASKT, MASKU, MASKV
   REAL, DIMENSION(1:NSEA)          :: SND_BUFF,RCV_BUFF
   REAL, DIMENSION(0:NSEA)          :: SND_BUFF1,RCV_BUFF1

   !!----------------------------------------------------------------------
   !! * Executable part

   MASKT(:)=1.
   MASKU(:)=1.
   MASKV(:)=1.
   rla_oasis_rcv(:,:) = 0.0

   DO ib_do = 1, il_nb_rcv

      ! Land mask
      IF (rcv_fld(ib_do)%cl_field_name == 'WW3__WDH') THEN
         CALL cpl_oasis_rcv(ib_do, id_oasis_time, rla_oasis_rcv, ll_action)
         IF (ll_action) THEN
            MASKT(1:NSEAL)  = rla_oasis_rcv(1:NSEAL,1)
         ENDIF
      ENDIF

      ! Land mask
      IF (rcv_fld(ib_do)%cl_field_name == 'WW3__WDU') THEN
         CALL cpl_oasis_rcv(ib_do, id_oasis_time, rla_oasis_rcv, ll_action)
         IF (ll_action) THEN
            MASKU(1:NSEAL)  = rla_oasis_rcv(1:NSEAL,1)
         ENDIF
      ENDIF

      ! Land mask
      IF (rcv_fld(ib_do)%cl_field_name == 'WW3__WDV') THEN
         CALL cpl_oasis_rcv(ib_do, id_oasis_time, rla_oasis_rcv, ll_action)
         IF (ll_action) THEN
            MASKV(1:NSEAL)  = rla_oasis_rcv(1:NSEAL,1)
         ENDIF
      ENDIF

      ! Sea surface Height (m)
      IF (rcv_fld(ib_do)%cl_field_name == 'WW3__SSH') THEN
         CALL cpl_oasis_rcv(ib_do, id_oasis_time, rla_oasis_rcv, ll_action)
         IF (ll_action) THEN
            TMP(1:NSEAL) = rla_oasis_rcv(1:NSEAL,1) * MASKT(1:NSEAL)
            SND_BUFF(1:NSEA) = 0.0
            DO ib_i = 1, NSEAL
               ib_j = IAPROC + (ib_i-1)*NAPROC
               SND_BUFF(ib_j) = TMP(ib_i)
            ENDDO

            CALL MPI_Allreduce(SND_BUFF(1:NSEA), &
                               RCV_BUFF(1:NSEA), &
                               NSEA,     &
                               MPI_REAL, &
                               MPI_SUM,  &
                               id_lcomm, &
                               il_err)

            ! Convert from storage (NSEA) to spatial grid (NX, NY)
            CALL W3S2XY(NSEA,NSEA,NX,NY,RCV_BUFF(1:NSEA),MAPSF,FAN)

         ENDIF
      ENDIF

      ! Ocean sea surface current (m.s-1) (u-component)
      IF (rcv_fld(ib_do)%cl_field_name == 'WW3___UZ') THEN
         CALL cpl_oasis_rcv(ib_do, id_oasis_time, rla_oasis_rcv, ll_action)
         IF (ll_action) THEN
            TMP(1:NSEAL) = rla_oasis_rcv(1:NSEAL,1) * MASKU(1:NSEAL)
            SND_BUFF1(0:NSEA) = 0.0
            DO ib_i = 1, NSEAL
               ib_j = IAPROC + (ib_i-1)*NAPROC
               SND_BUFF1(ib_j) = TMP(ib_i)
            ENDDO

            CALL MPI_Allreduce(SND_BUFF1(0:NSEA),       &
                               RCV_BUFF1(0:NSEA),       &
                               NSEA+1,   &
                               MPI_REAL, &
                               MPI_SUM,  &
                               id_lcomm, &
                               il_err)

            ! Convert from storage (NSEA) to spatial grid (NX, NY)
            CALL W3S2XY(NSEA,NSEA,NX,NY,RCV_BUFF1(0:NSEA),MAPSF,FXN)

         ENDIF
      ENDIF

      ! Ocean sea surface current (m.s-1) (v-component)
      IF (rcv_fld(ib_do)%cl_field_name == 'WW3___VZ') THEN
         CALL cpl_oasis_rcv(ib_do, id_oasis_time, rla_oasis_rcv, ll_action)
         IF (ll_action) THEN
            TMP(1:NSEAL) = rla_oasis_rcv(1:NSEAL,1) * MASKV(1:NSEAL)
            SND_BUFF1(0:NSEA) = 0.0
            DO ib_i = 1, NSEAL
               ib_j = IAPROC + (ib_i-1)*NAPROC
               SND_BUFF1(ib_j) = TMP(ib_i)
            ENDDO

            CALL MPI_Allreduce(SND_BUFF1(0:NSEA),       &
                               RCV_BUFF1(0:NSEA),       &
                               NSEA+1,   &
                               MPI_REAL, &
                               MPI_SUM,  &
                               id_lcomm, &
                               il_err)

            ! Convert from storage (NSEA) to spatial grid (NX, NY)
            CALL W3S2XY(NSEA,NSEA,NX,NY,RCV_BUFF1(0:NSEA),MAPSF,FYN)

         ENDIF
      ENDIF

   ENDDO

  END SUBROUTINE rcv_fields_from_ocean

END MODULE w3ogcmmd
