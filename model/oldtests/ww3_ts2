#!/bin/sh
#############################################################################
#                                                                           #
# ww3_ts2   Test script for WW-III, fetch-limited growth.                   #
#                                                                           #
# Model should be compiled with the switches :                              #
#                                                                           #
#   !/FLn !/LNn !/STn !/NLn !/BTn !/DBn !/TRn !/BSn !/XXn                   #
#                        Select source term, growth needed, other opt.      #
#   !/PRn                Selecting one of the propagation schemes.          #
#                         1: First order.                                   #
#                         2: Representative for all UQ schemes              #
#   !/WNX1 !/WNT1 !/CRX1 !/CRT1      Wind and current interpolation.        #
#   !/O1 !/O2 !/O3 !/O4 !/O5 !/O6 !/O7   Sdt out output options.            #
#                                                                           #
# Remarks :                                                                 #
# - Check the shell script variable 'grads' and set its environment to      #
#   generate graphical output using GrADS.                                  #
# - See ww3_ts1 about remarks on ww3_strt and linear growth.                #
#                                                                           #
# - This test can be the basis of a fetch limited growth test for tuning    #
#   a wave model. Some considerations should be made then.                  #
#                                                                           #
#    (i)  Stable stationary conditions are reached fastest with the first   #
#         order propagation scheme. The results deviate little from a       #
#         higher order scheme as already pointed out in Tolman, (1992,      #
#         JPO). The first order scheme is therefore most suitable for such  #
#         tests.                                                            #
#                                                                           #
#    (ii) The third order scheme has some slightly discontinuous            #
#         characteristics, which can interact with the nonlinear            #
#         interactions. This leads to linger wiggling of the results in     #
#         near stationary conditions, and also appears to be the reason     #
#         for slight directional instabilities in this fetch-limited        #
#         test. If the third order scheme is to be used, the !/PR2 option   #
#         with DTIME set as suggested in this script gives the most stable  #
#         results. Directional instabilities disappear of the initial       #
#         direction is shifted by half a directional step, using grid       #
#         setup                                                             #
#                                                                           #
#                            1.1  0.041  28  24  0.5                        #
#                                                                           #
#         It is not completely clear why the directional shift helps        #
#         stabilizing the directional properties of the spectra, but it is  #
#         assumed that this is related to the nonlinear interactions        #
#         between the third order scheme and Snl as mentioned above.        #
#                                                                           #
#   (iii) Note the effects of running with a one diemsnional case, where    #
#         long swell almost perpendicular to the coast arives at the coast, #
#         whereas this energy is generally not observed at the coast in a   #
#         model with limited width.                                         #
#                                                                           #
#                                              Hendrik Tolman, Jun 2002     #
#                                                              Sep 2003     #
#                                                   Last Mod : Dec 2010     #
#                                                                           #
#    Copyright 2009 National Weather Service (NWS),                         #
#       National Oceanic and Atmospheric Administration.  All rights        #
#       reserved.  WAVEWATCH III is a trademark of the NWS.                 #
#       No unauthorized use without permission.                             #
#                                                                           #
############################################################################# 

# 0. Preparations -----------------------------------------------------------

  ww3_env='.wwatch3.env'   # setup file

  grads='yes'                     # run gx_outp and grads [yes/-]
                                  # set you GrADS environment properly !!
# 0.a Set-up variables

  cd
  if [ -f $ww3_env ]
  then
    set `grep WWATCH3_DIR $ww3_env` ; shift
    main_dir="$*"
    set `grep WWATCH3_TMP $ww3_env` ; shift
    temp_dir="$*"
  else
    echo "*** Set-up file $ww3_env not found ***"
    exit
  fi

  path_w="$temp_dir"              # work directory
  path_e="$main_dir/exe"          # path for executables
  path_a="$main_dir/aux"          # path for gs scripts
  path_o="$main_dir/test"         # path for output files
# path_o="$main_dir/work"

# 0.b Clean-up

  clear
  rm -f $path_o/ww3_????.out
  rm -f $path_o/gx_????.out
  rm -f $path_o/log.ww3
  rm -f $path_o/test.ww3
  rm -f $path_o/tab??.ww3
  rm -f $path_o/*.ps
  rm -f $path_o/*.eps

  cd $path_w
  rm -f *.ww3 *.gs

  echo ' ' ; echo ' '
  echo '                  ======> TEST RUN WAVEWATCH III <====== '
  echo '                    ==================================   '
  echo '                                   source term test'
  echo '                                   fetch-limited growth'
  echo ' '

# 1. Grid pre-processor -----------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|  Grid preprocessor |'
  echo '+--------------------+'
  echo ' '

cat > ww3_grid.inp << EOF
$ WAVEWATCH III Grid preprocessor input file
$ ------------------------------------------
  'FETCH LIMITED GROWTH TEST     '
$
$  1.10  0.042  25  24  0.
   1.10  0.042  25  24  0.5
$  1.07  0.042  40  36  0.
$  1.07  0.042  40  36  0.5
$
  F T T F F T
  900.  900.  900.  60.
$ 900.  900.  900.  15.
$ 900.  900.  900.   5.
$
  &PRO2 DTIME=1. /
  &PRO3 WDTHCG = 0., WDTHTH = 0. /
  &PRO4 RNFAC = 0., RSFAC = 0. /
$ &MISC  XP = 0.075 /
$ &MISC  XP = 0.025 /
END OF NAMELISTS
$
  'RECT' F 'NONE'
  26   3
   25.E3  250.E3  1.
    0.E3 -250.E3  1.
$
  -5. 5.75  10  -2500. 3 1 '(....)' 'UNIT' 'input'
$
   1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
   1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
   1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
$
  10  1 1 '(....)' 'PART' 'input'
$
   0  0  F
   0  0  F
   0  0 
$
   0. 0. 0. 0.  0
EOF

  echo "   Screen ouput routed to $path_o/ww3_grid.out"
  $path_e/ww3_grid > $path_o/ww3_grid.out

  rm -f ww3_grid.inp

# 2. Initial conditions -----------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '| Initial conditions |'
  echo '+--------------------+'
  echo ' '

cat > ww3_strt.inp << EOF
$ WAVEWATCH III Initial conditions input file
$ -------------------------------------------
  5
$ 3
$ 2
$ 0.0  0.15  270.  3.3 0. 0. 0. 1.E10 0. 1.
EOF

  echo "   Screen ouput routed to $path_o/ww3_strt.out"
  $path_e/ww3_strt > $path_o/ww3_strt.out

  rm -f ww3_strt.inp

# 3. Main program -----------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|    Main program    |'
  echo '+--------------------+'
  echo ' '

cat > ww3_shel.inp << EOF
$ WAVEWATCH III shell input file
$ ------------------------------
   F T
   F T
   T T
   F
   F
   F
   F
$
   19680606 000000
   19680608 000000
$
   1
$
   19680606 000000   3600  19680608 000000
     F F F F F  T T T T T  T T F F F  F F F F F  F F F F F  F F F F F  F
   19680606 000000   3600  19680608 000000
      25.E3  0.0  'fetch_025 '
      50.E3  0.0  'fetch_050 '
      75.E3  0.0  'fetch_075 '
     100.E3  0.0  'fetch_100 '
     125.E3  0.0  'fetch_125 '
     150.E3  0.0  'fetch_150 '
     175.E3  0.0  'fetch_175 '
     200.E3  0.0  'fetch_200 '
     225.E3  0.0  'fetch_225 '
     250.E3  0.0  'fetch_250 '
     275.E3  0.0  'fetch_275 '
     300.E3  0.0  'fetch_300 '
     325.E3  0.0  'fetch_325 '
     350.E3  0.0  'fetch_350 '
     375.E3  0.0  'fetch_375 '
     400.E3  0.0  'fetch_400 '
     425.E3  0.0  'fetch_425 '
     450.E3  0.0  'fetch_450 '
     475.E3  0.0  'fetch_475 '
     500.E3  0.0  'fetch_500 '
     525.E3  0.0  'fetch_525 '
     550.E3  0.0  'fetch_550 '
     575.E3  0.0  'fetch_575 '
     600.E3  0.0  'fetch_600 '
       0.    0.0  'STOPSTRING'
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
$
   'WND' 19680606 000000   20.   270.  0.
   'WND' 19680608 000000   20.   270.  0.
   'STP'
EOF

  $path_e/ww3_shel
# mpirun -np 8 $path_e/ww3_shel

  rm -f ww3_shel.inp

  echo ' ' ; echo "   Output file log.ww3 routed to $path_o"
  mv log.ww3 $path_o/.
  if [ -f test.ww3 ]
  then
    echo "   Output file test.ww3 routed to $path_o"
    mv test.ww3 $path_o/.
  fi

# 4. Gridded output ---------------------------------------------------------

# echo ' '
# echo '+--------------------+'
# echo '|   Gridded output   |'
# echo '+--------------------+'
# echo ' '

# 5. Point output -----------------------------------------------------------

  echo ' '
  echo '+--------------------+'
  echo '|    Point output    |'
  echo '+--------------------+'
  echo ' '

  echo '   Table of mean wave parameters (fetch)'

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  19680607 230000  3600. 2
$
  1
  2 
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12 
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23 
 24
 -1
$
  2
$
  2  50
EOF

  echo "   Screen ouput routed to $path_o/ww3_op_1.out"

  $path_e/ww3_outp > $path_o/ww3_op_1.out

  echo "   Table file tab50.ww3 routed to $path_o"
  mv tab50.ww3 $path_o
  rm -f ww3_outp.inp

  echo ' '
  echo '   Table of mean wave parameters (time)'

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  19680606 000000  3600. 49
$
 24
 -1
$
  2
$
  2  51
EOF

  echo "   Screen ouput routed to $path_o/ww3_op_2.out"

  $path_e/ww3_outp > $path_o/ww3_op_2.out

  echo "   Table file tab51.ww3 routed to $path_o"
  mv tab51.ww3 $path_o
  rm -f ww3_outp.inp

  echo ' '
  echo '   Print plots of spectra (in screen output)'

cat > ww3_outp.inp << EOF
$ WAVEWATCH III Point output post-processing
$ ------------------------------------------
  19680606 000000 21600.  9
$
  1
  2 
  3
  4
  6
  8
 10
 12 
 16
 20
 24
 -1
$
  1
$
  1   0.  0.  33  F
EOF

  echo "   Screen ouput routed to $path_o/ww3_op_3.out"

  $path_e/ww3_outp > $path_o/ww3_op_3.out

  rm -f ww3_outp.inp

  if [ "$grads" = 'yes' ]
  then

  echo '   GrADS spectra'

cat > gx_outp.inp << EOF
$ WAVEWATCH III Point output post-processing (GrADS)
$ --------------------------------------------------
  19680608 000000 1. 1
$
   1
   2
   3
   4
   6
   8
  10
  12 
  16
  20
  24
  -1
$
  T T T T T T
EOF

    echo "   Screen output routed to $path_o/gx_outp.out"
    $path_e/gx_outp > $path_o/gx_outp.out

    rm -f gx_outp.inp

    ln -s $path_a/colorset.gs .
    ln -s $path_a/spec.gs  .
    ln -s $path_a/source.gs   .
    echo 'script ww3_ts2'        > spec_ids
    echo 'WAVEWATCH III TEST'   >> spec_ids

# Set up GrADS properly here if necessary !!!

echo > input << EOF

EOF

    cat input | grads -pbc "run spec"

    gxeps -c -i plot.grads -o $path_o/spec.eps

    rm -f plot.grads

  echo ' '
  echo '   GrADS sources'

    cat input | grads -pbc "run source"

    gxeps -c -i plot.grads -o $path_o/source.eps

    rm -f plot.grads ww3.* *.gs spec_ids

  fi

# 6. End, cleaning up -------------------------------------------------------

  echo ' ' ; echo ' ' ; echo "Files in `pwd` :" ; echo ' '
  ls -l *.ww3

  echo ' ' ; echo "Cleaning-up `pwd`"
  rm -f *.ww3

  echo ' ' ; echo "Files in $path_o :" ; echo ' '
  cd $path_o
  ls -l ww3_????.out
  if [ "$grads" = 'yes' ]
  then
    ls -l gx_*.out
  fi
  ls -l *.ww3
  if [ "$grads" = 'yes' ]
  then
    ls -l *.eps
  fi

  echo ' ' ; echo ' '
  echo '                  ======>  END OF WAVEWATCH III  <====== '
  echo '                    ==================================   '
  echo ' '

# End of ww3_ts2 ------------------------------------------------------------
