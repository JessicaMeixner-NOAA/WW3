$ -------------------------------------------------------------------- $
$ WAVEWATCH III multi-grid model driver input file                     $
$ -------------------------------------------------------------------- $
$
$ The first input line sets up the general multi-grid model definition
$ by defining the follwing six parameters :
$
$   1) Number of wave model grids.i                         ( NRGRD )
$   2) Number of grids defining input fields.               ( NRINP )
$   3) Flag for using unified point output file.           ( UNIPTS )
$   4) Output server type as in ww3_shel.inp
$   5) Flag for dedicated process for iunified point output.
$   6) Flag for grids sharing dedicated output processes.
$
$ 3 1 T 1 T T  {example}
  2 0 F 1 F F
$
$ -------------------------------------------------------------------- $
$ If there are input data grids defined ( NRINP > 0 ), then these
$ grids are defined first. These grids are defined as if they are wave
$ model grids using the file mod_def.MODID. Each grid is defined on
$ a separate input line with MODID, and eight input flags identifying
$ the presentce of 1) water levels 2) currents 3) winds 4) ice and
$ 5-7) assimilation data as in the file ww3_shel.inp.
$
$  'input' F F T F F F F {example}
$
$ In this example, we need the file mod_def.input to define the grid
$ and the file wind.input to provide the corresponding wind data.
$
$ -------------------------------------------------------------------- $
$ If all point output is gathered in a unified point output file
$ ( UNIPTS = .TRUE. ), then the output spectral grid needs to be 
$ defined. Ths information is taken from a wave model grid, and only
$ the spectral definitions from this grid are relevant. Define the
$ name of this grid here
$
$  'points' {example}
$
$ In this example, we need the file mod_def.points to define the
$ spectral output grid, and the point output will be written to the
$ file out_pnt.points
$
$ -------------------------------------------------------------------- $
$ Now each actual wave model grid is defined using 13 parameters to be
$ read fom a single line in the file. Each line contains the following
$ parameters
$     1)   Define the grid with the extension of the mod_def file.
$    2-8)  Define the inputs used by the grids with 8 keywords 
$          corresponding to the 8 flags defining the input in the
$          input files. Valid keywords are:
$            'no'      : This input is not used.
$            'native'  : This grid has its own input files, e.g. grid
$                        grdX (mod_def.grdX) uses ice.grdX.
$            'MODID'   : Take input from the grid identified by 
$                        MODID. In the example below, all grids get
$                        their wind from wind.input (mod_def.input).
$     9)   Rank number of grid (internally sorted and reassigned).
$    10)   Group number (internally reassigned so that different
$          ranks result in different group numbers.
$   11-12) Define fraction of communicator (processes) used for this
$          grid.
$    13)   Flag identifying dumping of boundary data used by this
$          grid. If true, the file nest.MODID is generated.
$
$  'grd1'  'no' 'no' 'input' 'no' 'no' 'no' 'no'   1  1  0.00 1.00  F {example}
$  'grd2'  'no' 'no' 'input' 'no' 'no' 'no' 'no'   2  1  0.00 1.00  F {example}
$  'grd3'  'no' 'no' 'input' 'no' 'no' 'no' 'no'   3  1  0.00 1.00  F {example}
$  'gband' 'no' 'no' 'no' 'no' 'no' 'no' 'no'   1  1  0.00 1.00  F
$  'arcticreg' 'no' 'no' 'no' 'no' 'no' 'no' 'no'   2  1  0.00 1.00  F
  'gbandd360' 'no' 'no' 'no' 'no' 'no' 'no' 'no'   1  1  0.00 1.00  F
  'arcticsub' 'no' 'no' 'no' 'no' 'no' 'no' 'no'   2  1  0.00 1.00  F
$
$
$ In this example three grids are used requiring the files
$ mod_def.grdN. All files get ther winds from the grid 'input'
$ defined by mod_def.input, and no other inputs are used. In the lines
$ that are commented out, each grid runs on a part of the pool of
$ processes assigned to the computation.
$
$ -------------------------------------------------------------------- $
$ Starting and ending times for the entire model run
$
   19680606 000000   19680607 000000
$
$ -------------------------------------------------------------------- $
$ Specific multi-scale model settings (single line).
$    Flag for masking computation in two-way nesting (except at 
$                                                     output times).
$    Flag for masking at printout time.
$
   T  T
$
$
$ -------------------------------------------------------------------- $
$ Conventional output requests as in ww3_shel.inp.  Will be applied
$ to all grids.
$
   19680606 000000   3600  19680608 000000
$-------------------------------------------------------------------------------------------------------------------
$D C W D W  I H L T T  T C F D S  D P P P P  P P W P D  F C C U C  F T T W W  W W A U B  F T S T J  F T U M M  P U U
$P U N T L  C S   0    M G P I P  P H T L T  S W S N T  C F F S H  A A W C C  C C B B E  B B X W    O U S S S  2 S S
$T R D   V  E     2    1 E   R R    S P P H  I S F R D    X D T A  W W A C F  H M R R D  B B Y O    C S S S C  S 1 2
$-------------------------------------------------------------------------------------------------------------------
 T F F F F  F T F F F  F F F F F  F F F F F  F F F F F  F F F F F  F F F F F  F F F F F  F F F F F  F F F F F  F F F
$
$ NOTE: Ff UNIPTS = .TRUE. then the point output needs to be defined
$       here and cannot be redefined below.
$
   19680606 000000   3600  19680608 000000
  15.50 73.50    'LFB1'
  30.00 74.00    'LFB2'
  28.5  71.5833  'Nordkyn'
$ 230.00 38.00  'NDBC 46059'
$ 206.12  0.00  'NDBC 51028'
$ 222.51 40.84  'NDBC 46006'
$ 237.58 36.75  'NDBC 46042'
$ 207.48 17.44  'NDBC 51004'
$ 197.73 23.40  'NDBC 51001'
$ 202.21 17.15  'NDBC 51002'
$ 240.92 33.75  'NDBC 46025'
$ 235.15 42.75  'NDBC 46015'
$ 229.68 42.52  'NDBC 46002'
$ 228.98 46.05  'NDBC 46005'
$ 235.49 46.12  'NDBC 46029'
$ 235.47 44.62  'NDBC 46050'
$ 289.53 38.50  'NDBC 44004'
$ 284.58 32.27  'NDBC 41002'
$ 287.34 34.68  'NDBC 41001'
$ 281.48 28.89  'NDBC 41010'
$ 235.48 40.72  'NDBC 46022'
$ 239.03 34.71  'NDBC 46023'
$ 238.11 35.74  'NDBC 46028'
$ 238.99 35.10  'NDBC 46062'
$ 240.47 32.43  'NDBC 46047'
  0.0     0.0  'STOPSTRING'
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
   19680606 000000      0  19680608 000000
$
$ -------------------------------------------------------------------- $
$ Output requests per grid and type to overwrite general setup
$ as defined above. First record per set is the grid name MODID
$ and the output type number. Then follows the standard time string,
$ and conventional data as per output type. In mww3_test_05 this is
$ not used. Below, one example generating partitioning output for 
$ the inner grid is included but commented out.
$
$ 'grd3'  6
$  19680606 000000    900  19680608 000000
$     0 999 1 0 999 1 T 
$
$ -------------------------------------------------------------------- $
$ Mandatory end of outpout requests per grid, identified by output 
$ type set to 0.
$
  'the_end'  0
$
$
$ -------------------------------------------------------------------- $
$ Moving grid data as in ww3_shel.inp. All grids will use same data.
$
$ 'MOV' 19680606 000000   5.  90. {example}
  'STP'
$
$ -------------------------------------------------------------------- $
$ End of input file                                                    $
$ -------------------------------------------------------------------- $
